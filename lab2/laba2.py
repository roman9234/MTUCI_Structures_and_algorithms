# no и yes - меньше/больше.
# дерево элементов. В нём и ищем.
# работает только с отсортированными массивами
import random
from typing import List

class Teacher:
    def __init__(self, characteristics : List, name : str):
        self.characteristics = characteristics
        self.name = name

t_abs = Teacher([
"мужчина",
"молодой",
"ведёт IT-предмет",
"ведёт физику",
"ведёт электронику",
"ведёт электротехнику",
"ведёт проектный практикум",
"ведёт физкультуру",
"ведёт высшую математику",
"ведёт ИТИП",
"ведёт теорию вероятностей",
"ведёт дисркетную математику",
"ведёт и лекции и лабораторные",
"ведёт только лекции",
"ведёт только лабораторные/практики"
], "имя препода")

t1 = Teacher([
"мужчина",
"ведёт физику",
"ведёт только лекции"
], "Вальковский Сергей Николаевич. Физика - лекции")
t2 = Teacher([
"мужчина",
"ведёт физику",
"ведёт только лабораторные/практики"
], "Полищук Юрий Владимирович. Физика - практика")
t3 = Teacher([
"мужчина",
"ведёт электронику",
"ведёт только лекции"
], "Власов Вячеслав Петрович. Электионика - лекции")
t4 = Teacher([
"женщина",
"ведёт электротехнику",
"ведёт и лекции и лабораторные",
"вызывает страх у студентов"
], "Семёнова Татьяна Николаевна. Электротехника")
t5 = Teacher([
"женщина",
"молодой",
"ведёт IT-предмет",
"ведёт ИТИП",
"ведёт только лабораторные/практики"
], "Мосева Марина Сергеевна. ИТИП - практики")
t6 = Teacher([
"мужчина",
"молодой",
"ведёт IT-предмет",
"ведёт ИТИП",
"рассказывал вам про процессор",
"ведёт только лекции",
], "Симонов Сергей Евгеньевич. ИТИП - лекции")
t7 = Teacher([
"женщина",
"ведёт теорию вероятностей",
"ведёт и лекции и лабораторные"
], "Скородумова Елена Александровна. Вероятности")
t8 = Teacher([
"женщина",
"ведёт проектный практикум",
], "Петросян Вера Рафаэловна. Проектный практикум")
t9= Teacher([
"молодой",
"женщина",
"ведёт дисркетную математику",
], "Изотова Анастасия Андреевна. дисркетная математика")
t10 = Teacher([
"женщина",
"ведёт физкультуру",
], "Королева Светлана Анатольевна. Физкультура")
t11 = Teacher([
"женщина",
"ведёт высшую математику",
], "Шаймарданова Лилия Кимматовна. высшая математика")

teachers = [t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11]

class AkinatorController:

    def __init__(self, _teachers : List):
        self.active_chars = None
        self._teachers = _teachers
        self.possible_chars = self.get_all_chars()
        # print(self.possible_chars)

    def start(self):
        self.active_chars = self.possible_chars.copy()
        random.shuffle(self.active_chars)
        while True:
            if len(self._teachers) == 0:
                print("преподаватель не найден")
                print("добавить преподавателя?")
                # TODO добавление преподавателей
            if len(self._teachers) == 1:
                answer = self.get_answer(f"Ваш преподаватель - {teachers[0].name}?")


    def get_answer(self, question : str):
        while True:
            answer = input("да/нет").strip().lower()
            if answer == "да":
                pass
            elif answer == "yes":
                pass
            else:
                print("неправильный формат ответа")



    def get_all_chars(self):
        result = set()
        for teacher in self._teachers:
            for x in teacher.characteristics:
                result.add(x)
        return list(result)



controller = AkinatorController(teachers)
